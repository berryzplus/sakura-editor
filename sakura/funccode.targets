<Project ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup Label="Vcpkg">
    <VcpkgConfiguration Condition="'$(Configuration)'=='Debug'">Debug</VcpkgConfiguration>
    <VcpkgEnableManifest>true</VcpkgEnableManifest>
    <VcpkgManifestDirectory>$([MSBuild]::NormalizePath('$(MSBuildThisFileDirectory)', '..\'))</VcpkgManifestDirectory>
    <VcpkgInstalledDir>$([MSBuild]::NormalizePath('$(MSBuildThisFileDirectory)', '..\build\vcpkg_installed\'))</VcpkgInstalledDir>
    <VcpkgTriplet Condition="'$(Platform)'=='Win32'">x86-windows-static</VcpkgTriplet>
    <VcpkgTriplet Condition="'$(Platform)'=='x64'">x64-windows-static</VcpkgTriplet>
    <VcpkgUseStatic>true</VcpkgUseStatic>
  </PropertyGroup>
  <PropertyGroup Label="FuncCode">
    <ExecutablePath Condition="'$(VcpkgRoot)'!=''">$(VcpkgRoot);$(ExecutablePath)</ExecutablePath>
    <HeaderMake>$(VcpkgInstalledDir)x64-windows\tools\header-make\HeaderMake.exe</HeaderMake>
    <FuncCodeDefine>$(IntDir)Funccode_define.h</FuncCodeDefine>
    <FuncCodeEnum>$(IntDir)Funccode_enum.h</FuncCodeEnum>
  </PropertyGroup>
  <Target Name="InstallHeaderMake"
      Condition="!Exists('$(HeaderMake)')"
      AfterTargets="GenerateGitHash"
      BeforeTargets="FuncCodeDefine;FuncCodeEnum">
    <Exec Command="chcp 65001 &gt;NUL &amp;&amp; bootstrap-vcpkg.bat" Condition="!Exists('$(VcpkgRoot)\vcpkg.exe')" StdOutEncoding="UTF-8" StdErrEncoding="UTF-8" WorkingDirectory="$(VcpkgRoot)" />
    <Exec Command="chcp 65001 &gt;NUL &amp;&amp; vcpkg.exe install --x-wait-for-lock --triplet $(VcpkgTriplet) &quot;--x-manifest-root=$(VcpkgManifestDirectory.TrimEnd('\'))&quot; &quot;--x-install-root=$(VcpkgInstalledDir.TrimEnd('\'))&quot;" StdOutEncoding="UTF-8" StdErrEncoding="UTF-8" WorkingDirectory="$(MSBuildThisFileDirectory).." />
  </Target>
  <Target Name="_WriteFuncCodeDefineRcTlogs">
    <ItemGroup>
      <_FuncCodeDefineReadTlog Include="^$(FuncCodeDefine);%(FuncCodeRes.FullPath)" 
         Condition="'%(FuncCodeRes.ExcludedFromBuild)' != 'true'"/>
      <_FuncCodeDefineWriteTlog Include="^%(FuncCodeRes.FullPath);$(FuncCodeDefine)" 
         Condition="'%(FuncCodeRes.ExcludedFromBuild)' != 'true'"/>
    </ItemGroup>
    <WriteLinesToFile
      Condition="'@(_FuncCodeDefineReadTlog)' != ''"
      File="$(TLogLocation)rc.read.1u.tlog"
      Lines="@(_FuncCodeDefineReadTlog->MetaData('Identity')->ToUpperInvariant());"
      Overwrite="true"
      Encoding="Unicode"/>
    <WriteLinesToFile
      Condition="'@(_FuncCodeDefineWriteTlog)' != ''"
      File="$(TLogLocation)rc.write.1u.tlog"
      Lines="@(_FuncCodeDefineWriteTlog->MetaData('Identity')->ToUpperInvariant());"
      Overwrite="true"
      Encoding="Unicode"/>
    <ItemGroup>
      <_FuncCodeDefineReadTlog  Remove="@(_FuncCodeDefineReadTlog)" />
      <_FuncCodeDefineWriteTlog Remove="@(_FuncCodeDefineWriteTlog)" />
    </ItemGroup>
  </Target>
  <Target Name="FuncCodeDefine"
      Inputs="@(FuncCodeRes);$(MSBuildThisFilePath)"
      Outputs="$(FuncCodeDefine)"
      DependsOnTargets="_WriteFuncCodeDefineRcTlogs"
      BeforeTargets="ResourceCompile">
    <Exec Command="$(HeaderMake) -in=@(FuncCodeRes) -out=$(FuncCodeDefine) -mode=define" />
  </Target>
  <Target Name="_WriteFuncCodeEnumClTlogs">
    <ItemGroup>
      <_FuncCodeEnumReadTlog Include="^$(FuncCodeEnum);%(FuncCodeRes.FullPath)" 
         Condition="'%(FuncCodeRes.ExcludedFromBuild)' != 'true'"/>
      <_FuncCodeEnumWriteTlog Include="^%(FuncCodeRes.FullPath);$(FuncCodeEnum)" 
         Condition="'%(FuncCodeRes.ExcludedFromBuild)' != 'true'"/>
    </ItemGroup>
    <WriteLinesToFile
      Condition="'@(_FuncCodeEnumReadTlog)' != ''"
      File="$(TLogLocation)CL.read.1u.tlog"
      Lines="@(_FuncCodeEnumReadTlog->MetaData('Identity')->ToUpperInvariant());"
      Overwrite="true"
      Encoding="Unicode"/>
    <WriteLinesToFile
      Condition="'@(_FuncCodeEnumWriteTlog)' != ''"
      File="$(TLogLocation)CL.write.1u.tlog"
      Lines="@(_FuncCodeEnumWriteTlog->MetaData('Identity')->ToUpperInvariant());"
      Overwrite="true"
      Encoding="Unicode"/>
    <ItemGroup>
      <_FuncCodeEnumReadTlog  Remove="@(_FuncCodeEnumReadTlog)" />
      <_FuncCodeEnumWriteTlog Remove="@(_FuncCodeEnumWriteTlog)" />
    </ItemGroup>
  </Target>
  <Target Name="FuncCodeEnum"
      Inputs="@(FuncCodeRes);$(MSBuildThisFilePath)"
      Outputs="$(FuncCodeEnum)"
      DependsOnTargets="_WriteFuncCodeEnumClTlogs"
      BeforeTargets="ClCompile">
    <Exec Command="$(HeaderMake) -in=@(FuncCodeRes) -out=$(FuncCodeEnum) -mode=enum -enum=EFunctionCode" />
  </Target>
</Project>